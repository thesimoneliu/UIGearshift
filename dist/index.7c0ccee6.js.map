{"mappings":"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","sources":["app.js"],"sourcesContent":["class App {\n  constructor() {\n    this.handler = document.querySelector('.handler')\n    this.sbtn = document.querySelector('.sbtn')\n\n    this.viewport = {}\n\n    this.mouseX = {\n      current: 0,\n      target: 0,\n      lerp: 0.1,\n    }\n    this.mouseY = {\n      current: 0,\n      target: 0,\n      lerp: 0.1,\n    }\n\n    this.addEventListeners(this.handler)\n    this.update()\n  }\n\n  transformFromViewportToSVGElement(x, y, sctm, elementTransform = null) {\n    // Transforms coordinates from the client (viewport) coordinate\n    // system to coordinates in the SVG element's coordinate system.\n    // Call this, for example, with clientX and clientY from mouse event.\n\n    // create a new DOM point based on coordinates from client viewport\n    const p = new DOMPoint(x, y)\n\n    // invert sctm, so we can transform from screen/viewport to element\n    // transform the point using the inverted matrix\n    const transformedPoint = p.matrixTransform(sctm.inverse())\n\n    // adjust the point for the currently applied scale on the element\n    if (elementTransform !== null) {\n      transformedPoint.x *= elementTransform[0] // scale x\n      transformedPoint.y *= elementTransform[3] // scale y\n    }\n\n    return { x: transformedPoint.x, y: transformedPoint.y }\n  }\n\n  /* -------------\n   ------------ EVENTS\n   -------------- */\n\n  onResize() {\n    this.viewport.width = window.innerWidth\n    this.viewport.height = window.innerHeight\n\n    window.requestAnimationFrame((_) => {})\n  }\n\n  onTouchStart({ clientX, clientY }) {}\n  onTouchMove({ clientX, clientY }) {\n    this.mouseX.current = clientX\n    this.mouseY.current = clientY\n  }\n  onTouchEnd({ clientX, clientY }) {}\n\n  /* -------------\n   ------------ LOOPS & FRAMES\n   -------------- */\n\n  update() {\n    // get svg matrix and turn it into an array\n    const MATRIX_STR = document.getElementById('gear__svg-active__wrapper').getAttribute('transform')\n    const MATRIX = MATRIX_STR.replace(/^matrix\\(/, '')\n      .replace(/\\)$/, '')\n      .split(',')\n      .map(parseFloat)\n    // get the transform matrix used to convert from the SVG element's coordinates to the screen/viewport coordinate system\n    const SCTM = document.getElementById('gear__svg-active__wrapper').getScreenCTM()\n\n    const mouseStart = this.transformFromViewportToSVGElement(this.mouseX.current, this.mouseY.current, SCTM, MATRIX)\n    console.log(SCTM)\n\n    // update next frames\n    this.frame = window.requestAnimationFrame(this.update.bind(this))\n  }\n\n  /* -------------\n  ------------ LISTENERS\n  -------------- */\n\n  addEventListeners(element) {\n    element.addEventListener('mousedown', this.onTouchStart.bind(this))\n    element.addEventListener('mousemove', this.onTouchMove.bind(this))\n    element.addEventListener('mouseup', this.onTouchEnd.bind(this))\n    element.addEventListener('touchstart', this.onTouchStart.bind(this))\n    element.addEventListener('touchmove', this.onTouchMove.bind(this))\n    element.addEventListener('touchend', this.onTouchEnd.bind(this))\n\n    window.addEventListener('resize', this.onResize.bind(this))\n  }\n}\n\nnew App()\n\n/* -------------\n  ------------ WEBSOCKET\n  -------------- */\n"],"names":[],"version":3,"file":"index.7c0ccee6.js.map","sourceRoot":"/__parcel_source_root/"}